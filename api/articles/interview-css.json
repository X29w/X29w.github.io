{"title":"interview-css","uid":"22d898182469a084004dd0b5135b46c1","slug":"interview-css","date":"2024-05-30T14:57:57.000Z","updated":"2024-05-30T14:58:10.080Z","comments":true,"path":"api/articles/interview-css.json","keywords":null,"cover":null,"content":"<h1 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h1><h2 id=\"CSS选择器及其优先级\"><a href=\"#CSS选择器及其优先级\" class=\"headerlink\" title=\"CSS选择器及其优先级\"></a>CSS选择器及其优先级</h2><ul>\n<li>内联样式：直接在HTML元素上使用<code>style</code>属性定义的样式具有最高优先级，权值为<strong>1000</strong>。</li>\n<li>ID选择器：形如<code>#idName</code>的选择器，权值为<strong>100</strong>。</li>\n<li>类选择器、属性选择器、伪类选择器：包括.className、[attribute&#x3D;value]和:hover等，权值均为<strong>10</strong>。</li>\n<li>标签选择器、伪元素选择器：如<code>div</code>、<code>:before</code>、<code>:after</code>等，权值为<strong>1</strong>。</li>\n</ul>\n<h2 id=\"CSS中可继承与不可继承属性有哪些\"><a href=\"#CSS中可继承与不可继承属性有哪些\" class=\"headerlink\" title=\"CSS中可继承与不可继承属性有哪些\"></a>CSS中可继承与不可继承属性有哪些</h2><ul>\n<li>可继承的属性（通常会影响到文档的文本内容和外观）<ul>\n<li>字体系列属性</li>\n<li>文本系列属性</li>\n<li>元素可见性</li>\n</ul>\n</li>\n<li>不可继承的属性（通常影响元素的盒模型、布局或绝对定位）<ul>\n<li>盒模型属性</li>\n<li>背景属性</li>\n<li>定位属性</li>\n<li>显示属性</li>\n<li>宽高属性</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"display的属性值及其作用\"><a href=\"#display的属性值及其作用\" class=\"headerlink\" title=\"display的属性值及其作用\"></a>display的属性值及其作用</h2><ul>\n<li>block<ul>\n<li>元素会作为一个块级元素显示，独占一行，可以设置宽度、高度以及内外边距。这是大多数块级元素的默认display值。</li>\n</ul>\n</li>\n<li>inline<ul>\n<li>元素作为行内元素显示，与其他行内元素在同一行显示，宽度和高度由内容决定，不能直接设置，但可以设置水平内外边距，垂直只有外边距有效。</li>\n</ul>\n</li>\n<li>inline-block<ul>\n<li>兼具行内元素和块级元素的特点，即可以和其他行内元素同行显示，同时也能设定宽度、高度以及所有四个方向的内外边距。</li>\n</ul>\n</li>\n<li>none<ul>\n<li>元素不会被显示，并且不会占据任何空间，连同它原来的位置也会被忽略。</li>\n</ul>\n</li>\n<li>list-item<ul>\n<li>元素会作为一个列表项显示，类似于<li>元素，会生成一个标记（通常是项目符号），并且像块级元素一样独占一行。</li>\n</ul>\n</li>\n<li>flex<ul>\n<li>将元素变为一个弹性容器，其子元素会按照弹性布局的规则排列，适合创建响应式和动态布局。</li>\n</ul>\n</li>\n<li>grid<ul>\n<li>将元素变为一个网格容器，子元素按照网格布局排列，适合构建二维布局系统。</li>\n</ul>\n</li>\n<li>inherit:<ul>\n<li>元素的display值继承自其父元素。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"隐藏元素的方法有哪些\"><a href=\"#隐藏元素的方法有哪些\" class=\"headerlink\" title=\"隐藏元素的方法有哪些\"></a>隐藏元素的方法有哪些</h2><ul>\n<li>display: none;<ul>\n<li>作用: 完全从页面流中移除元素，不占据任何空间，也不会触发重排或重绘。元素变得不可见且无法与用户交互。</li>\n</ul>\n</li>\n<li>visibility: hidden;<ul>\n<li>作用: 元素隐藏但仍占据原来的空间，影响布局流。元素不可见，不触发重排但可能触发重绘，且不能与用户交互。</li>\n</ul>\n</li>\n<li>opacity: 0;<ul>\n<li>作用: 通过设置透明度为0使元素不可见，元素仍占据页面空间并参与布局，可以与用户交互（如点击事件可能穿透到下面的元素）。</li>\n</ul>\n</li>\n<li>height: 0; width: 0; overflow: hidden;<ul>\n<li>作用: 通过将元素尺寸缩小至0并隐藏溢出内容来隐藏元素，元素仍存在于页面流中，但视觉上不可见。</li>\n</ul>\n</li>\n<li>position: absolute; left: -9999px; (或其他远离屏幕位置)<ul>\n<li>作用: 将元素移出可视窗口，使其在屏幕上不可见，但依然保持在文档流中，可能会影响布局。</li>\n</ul>\n</li>\n<li>clip-path: inset(100%);<ul>\n<li>作用: 使用剪裁路径将元素完全剪裁掉，元素依然占据空间，但内容不可见。</li>\n</ul>\n</li>\n<li>transform: scale(0);<ul>\n<li>作用: 通过缩放变换将元素缩小到0，使其不可见，但元素仍保留其在布局中的空间。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"CSS-优化和提高性能的方法有哪些？\"><a href=\"#CSS-优化和提高性能的方法有哪些？\" class=\"headerlink\" title=\"CSS 优化和提高性能的方法有哪些？\"></a>CSS 优化和提高性能的方法有哪些？</h2><p>减少CSS文件大小:</p>\n<p>优化加载性能:</p>\n<p>避免重排和重绘:</p>\n<p>选择器优化:</p>\n<p>模块化CSS: 将CSS分解为可管理的模块或组件，便于维护和复用。</p>\n<h2 id=\"Sass、Less-是什么？为什么要使用他们？\"><a href=\"#Sass、Less-是什么？为什么要使用他们？\" class=\"headerlink\" title=\"Sass、Less 是什么？为什么要使用他们？\"></a>Sass、Less 是什么？为什么要使用他们？</h2><p><code>Sass</code>和<code>Less</code>是CSS预处理器，它们扩展了CSS的功能，引入变量、嵌套、混合、函数等特性，使得样式代码更易读、更模块化、更易于维护。</p>\n<h2 id=\"z-index属性在什么情况下会失效\"><a href=\"#z-index属性在什么情况下会失效\" class=\"headerlink\" title=\"z-index属性在什么情况下会失效\"></a>z-index属性在什么情况下会失效</h2><ul>\n<li>父元素的 <code>position</code> 不是 <code>absolute</code> 或 <code>fixed</code>。</li>\n<li>元素本身未设置 <code>position: relative</code>, <code>absolute</code>, 或 <code>fixed</code>。</li>\n<li>元素应用了浮动（<code>float</code>）样式，可能需要清除浮动或改用其他布局方式。</li>\n</ul>\n<h2 id=\"常见的CSS布局单位\"><a href=\"#常见的CSS布局单位\" class=\"headerlink\" title=\"常见的CSS布局单位\"></a>常见的CSS布局单位</h2><ul>\n<li>像素 (px)：绝对单位，用于精确控制元素尺寸和位置。</li>\n<li>百分比 (%)：相对单位，基于父元素的尺寸进行计算，适用于响应式设计。</li>\n<li>em：相对单位，等于当前字体大小，常用于字体大小和响应式布局调整。</li>\n<li>rem：相对单位，基于根元素（通常是）的字体大小，适用于全局样式调整和响应式设计。</li>\n<li>视窗单位 (vw, vh, vmin, vmax)：视口相关的单位，vw代表视口宽度的1%，vh代表视口高度的1%，适应窗口大小变化。</li>\n</ul>\n<h2 id=\"为什么需要清除浮动？清除浮动的方式\"><a href=\"#为什么需要清除浮动？清除浮动的方式\" class=\"headerlink\" title=\"为什么需要清除浮动？清除浮动的方式\"></a>为什么需要清除浮动？清除浮动的方式</h2><ul>\n<li>高度塌陷：当一个容器内的所有子元素都设置了浮动，这些子元素会脱离容器，使得容器高度计算为<strong>0</strong>，表现为容器没有包围住浮动的子元素，这就是所谓的“高度塌陷”。</li>\n<li>影响后续元素布局：浮动元素不占用原来的位置，可能导致后面的非浮动元素提前显示在其之前，影响页面布局。</li>\n</ul>\n<p>可以采用以下几种清除浮动的方式：</p>\n<ul>\n<li>父级添加<code>overflow</code>属性：给包含浮动元素的父级容器设置<code>overflow:hidden</code>或<code>overflow:auto</code>，这可以触发<code>BFC</code>（块格式化上下文），从而自动包含浮动的子元素，解决高度塌陷问题。</li>\n<li>使用伪元素：在浮动元素的父容器上应用<code>:after</code>伪元素，并设置内容为一个空白字符（如<code>content: &#39;&#39;</code>;），同时指定<code>display:block</code>和<code>clear:both</code>，这样既不需要额外的HTML标签也能清除浮动。</li>\n<li>CSS <code>Flexbox</code>或<code>Grid</code>布局：使用现代布局方式如<code>Flexbox（display:flex</code>）或<code>Grid（display:grid）</code>，它们天然支持子元素对齐，通常不需要手动清除浮动。</li>\n</ul>\n<h2 id=\"对BFC的理解，如何创建BFC\"><a href=\"#对BFC的理解，如何创建BFC\" class=\"headerlink\" title=\"对BFC的理解，如何创建BFC\"></a>对BFC的理解，如何创建BFC</h2><p>BFC（Block Formatting Context，块级格式化上下文）是Web页面布局中的一个核心概念，它定义了一个独立的渲染区域，内部的元素布局不会影响外部，同样外部元素也不会影响内部。这意味着BFC可以用来防止外边距折叠、包含浮动元素、防止某些类型的重叠等布局问题。</p>\n<p>创建BFC有多种方式，以下是一些常见的方法：</p>\n<ul>\n<li>浮动元素：给元素设置 <code>float</code> 属性为 <code>left</code> 或 <code>right</code>。</li>\n<li>绝对定位：将元素的 <code>osition</code> 设置为 <code>absolute</code> 或 <code>fixed</code>。</li>\n<li>显示类型改变：将元素的 <code>display</code> 属性设置为 <code>inline-block</code>、<code>flex</code></li>\n<li>溢出设置：给元素设置 <code>overflow</code> 为 <code>hidden</code>、<code>auto</code> 或 <code>scroll</code></li>\n</ul>\n<h2 id=\"什么是margin重叠问题？如何解决？\"><a href=\"#什么是margin重叠问题？如何解决？\" class=\"headerlink\" title=\"什么是margin重叠问题？如何解决？\"></a>什么是margin重叠问题？如何解决？</h2><p>Margin重叠，是指在CSS布局中，当两个或多个垂直相邻的块级元素的外边距相遇时，并不是简单地相加，而是会合并成一个较大的外边距。</p>\n<p>解决Margin重叠问题的方法有以下几种：</p>\n<ul>\n<li>使用BFC（块格式化上下文）：为发生Margin重叠的元素创建一个新的BFC，可以防止外边距重叠。可以通过设置 <code>overflow: auto</code> 或 <code>overflow: hidden</code>、<code>display: flow-root</code>、<code>float: left</code> 或 <code>right</code>、<code>position: absolute</code> 或 <code>fixed</code>等属性来实现。</li>\n<li>添加透明边框：给元素添加一个非常小的透明边框（例如 <code>border-top: 1px solid transparent</code>），可以阻止与其上方元素的外边距重叠。</li>\n<li>使用padding或height：为元素添加一个非零的<code>padding</code>或明确设置<code>height</code>，即使是很小的值，也可以阻止外边距重叠，因为此时元素有了实际的内容区域。</li>\n<li>使用负margin：在某些情况下，可以通过为一个元素设置负的外边距来补偿由于重叠造成的空间缺失，但这要求对布局有精确的控制并可能导致其他布局问题。</li>\n<li>结构调整：在DOM结构中插入一个空的块级元素，并为这个新元素清除浮动或设置适当的外边距，以物理分隔原本会发生重叠的元素。</li>\n</ul>\n<h2 id=\"position的属性有哪些，区别是什么\"><a href=\"#position的属性有哪些，区别是什么\" class=\"headerlink\" title=\"position的属性有哪些，区别是什么\"></a>position的属性有哪些，区别是什么</h2><ul>\n<li>static：元素按照正常文档流排列，忽略<code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>属性。</li>\n<li>relative：元素相对于其正常位置（在文档流中的位置）进行定位，不影响其他元素布局，仍保留原空间。</li>\n<li>absolute：元素相对于最近的非<code>static</code>定位的祖先元素定位，完全脱离文档流，不保留原空间。</li>\n<li>fixed：元素相对于浏览器窗口定位，不随滚动条滚动，完全脱离文档流。</li>\n<li>sticky：根据用户的滚动位置，在达到特定阈值时，表现为相对定位与固定定位之间切换，部分浏览器支持。</li>\n</ul>\n<h2 id=\"伪元素和伪类的区别和作用？\"><a href=\"#伪元素和伪类的区别和作用？\" class=\"headerlink\" title=\"伪元素和伪类的区别和作用？\"></a>伪元素和伪类的区别和作用？</h2><ul>\n<li>伪类（Pseudo-Classes）<ul>\n<li>作用：伪类主要用于选择元素基于状态或位置的特定部分，比如元素的<code>:hove</code>r状态，表示当鼠标悬停在元素上时的样式。</li>\n<li>特点：伪类不创造新的元素，而是选择已有元素的特定状态。</li>\n<li>示例：<code>:hover</code>, <code>:active</code>, <code>:first-child</code>等。</li>\n</ul>\n</li>\n<li>伪元素（Pseudo-Elements）：<ul>\n<li>作用：伪元素用于在文档树中插入新的内容或选择元素的特定部分，比如为一个元素添加前缀或后缀内容。</li>\n<li>特点：伪元素创建了文档树中不存在的虚拟元素，用于装饰或内容插入，如:before和:after用来插入内容。</li>\n<li>示例：<code>::before</code>, <code>::after</code>等。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"对盒模型的理解\"><a href=\"#对盒模型的理解\" class=\"headerlink\" title=\"对盒模型的理解\"></a>对盒模型的理解</h2><p>CSS盒模型是网页设计中的一个核心概念，用于描述元素在页面布局中占用空间的方式。它将每个HTML元素视为一个矩形盒子，这个盒子由四个部分组成：</p>\n<ul>\n<li><p>内容区域（Content）：盒子的核心部分，包含元素的实际内容，如文本、图片等。内容区域的大小由<code>width</code>和<code>height</code>属性定义。</p>\n</li>\n<li><p>内边距（Padding）：围绕在内容区域外部的空白区域，可以设置背景颜色或图片。内边距不影响盒子与其他元素的距离，仅增加盒子的可见大小。</p>\n</li>\n<li><p>边框（Border）：紧挨内边距外部，可以设置宽度、样式和颜色，界定盒子的界限。</p>\n</li>\n<li><p>外边距（Margin）：位于边框外部，是透明的，用来定义元素与其他元素之间的距离，不影响盒子背景色。</p>\n</li>\n</ul>\n<p>盒模型有两种布局方式：</p>\n<ul>\n<li>标准盒模型（W3C盒模型）：宽度和高度只包含内容区域，边框和内边距会额外增加盒子的总宽度和高度。</li>\n<li>怪异盒模型（IE盒模型）：宽度和高度包含内容、内边距和边框，使用<code>box-sizing: border-box;</code>可以启用这种模式。</li>\n</ul>\n<h2 id=\"画一条0-5px的线\"><a href=\"#画一条0-5px的线\" class=\"headerlink\" title=\"画一条0.5px的线\"></a>画一条0.5px的线</h2><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">.thin-line &#123;\n    border-top: 1px solid rgba(0, 0, 0, 0.5); \n    transform: scaleY(0.5); \n&#125;</code></pre>\n\n<h2 id=\"如何解决-1px-问题？\"><a href=\"#如何解决-1px-问题？\" class=\"headerlink\" title=\"如何解决 1px 问题？\"></a>如何解决 1px 问题？</h2><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">.hairline &#123;\n    border: 1px solid #000;\n    transform: scale(0.5);\n    transform-origin: left top;\n&#125;</code></pre>\n\n<h2 id=\"实现一个三角形\"><a href=\"#实现一个三角形\" class=\"headerlink\" title=\"实现一个三角形\"></a>实现一个三角形</h2><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">.triangle-down &#123;\n    width: 0;\n    height: 0;\n    border-left: 50px solid transparent;\n    border-right: 50px solid transparent;\n    border-bottom: 100px solid black;\n&#125;</code></pre>\n","text":"CSSCSS选择器及其优先级 内联样式：直接在HTML元素上使用style属性定义的样式具有最高优先级，权值为1000。 ID选择器：形如#idName的选择器，权值为100。 类选择器、属性选择器、伪类选择器：包括.className、[attribute&#x3D;value...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CSS\"><span class=\"toc-text\">CSS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CSS%E9%80%89%E6%8B%A9%E5%99%A8%E5%8F%8A%E5%85%B6%E4%BC%98%E5%85%88%E7%BA%A7\"><span class=\"toc-text\">CSS选择器及其优先级</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CSS%E4%B8%AD%E5%8F%AF%E7%BB%A7%E6%89%BF%E4%B8%8E%E4%B8%8D%E5%8F%AF%E7%BB%A7%E6%89%BF%E5%B1%9E%E6%80%A7%E6%9C%89%E5%93%AA%E4%BA%9B\"><span class=\"toc-text\">CSS中可继承与不可继承属性有哪些</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#display%E7%9A%84%E5%B1%9E%E6%80%A7%E5%80%BC%E5%8F%8A%E5%85%B6%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">display的属性值及其作用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E6%96%B9%E6%B3%95%E6%9C%89%E5%93%AA%E4%BA%9B\"><span class=\"toc-text\">隐藏元素的方法有哪些</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CSS-%E4%BC%98%E5%8C%96%E5%92%8C%E6%8F%90%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E6%96%B9%E6%B3%95%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F\"><span class=\"toc-text\">CSS 优化和提高性能的方法有哪些？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Sass%E3%80%81Less-%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8%E4%BB%96%E4%BB%AC%EF%BC%9F\"><span class=\"toc-text\">Sass、Less 是什么？为什么要使用他们？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#z-index%E5%B1%9E%E6%80%A7%E5%9C%A8%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E4%BC%9A%E5%A4%B1%E6%95%88\"><span class=\"toc-text\">z-index属性在什么情况下会失效</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E7%9A%84CSS%E5%B8%83%E5%B1%80%E5%8D%95%E4%BD%8D\"><span class=\"toc-text\">常见的CSS布局单位</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%EF%BC%9F%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">为什么需要清除浮动？清除浮动的方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AF%B9BFC%E7%9A%84%E7%90%86%E8%A7%A3%EF%BC%8C%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BABFC\"><span class=\"toc-text\">对BFC的理解，如何创建BFC</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFmargin%E9%87%8D%E5%8F%A0%E9%97%AE%E9%A2%98%EF%BC%9F%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%EF%BC%9F\"><span class=\"toc-text\">什么是margin重叠问题？如何解决？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#position%E7%9A%84%E5%B1%9E%E6%80%A7%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%8C%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">position的属性有哪些，区别是什么</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%AA%E5%85%83%E7%B4%A0%E5%92%8C%E4%BC%AA%E7%B1%BB%E7%9A%84%E5%8C%BA%E5%88%AB%E5%92%8C%E4%BD%9C%E7%94%A8%EF%BC%9F\"><span class=\"toc-text\">伪元素和伪类的区别和作用？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E7%9B%92%E6%A8%A1%E5%9E%8B%E7%9A%84%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">对盒模型的理解</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%BB%E4%B8%80%E6%9D%A10-5px%E7%9A%84%E7%BA%BF\"><span class=\"toc-text\">画一条0.5px的线</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3-1px-%E9%97%AE%E9%A2%98%EF%BC%9F\"><span class=\"toc-text\">如何解决 1px 问题？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E4%B8%89%E8%A7%92%E5%BD%A2\"><span class=\"toc-text\">实现一个三角形</span></a></li></ol></li></ol>","author":{"name":"X-29","slug":"blog-author","avatar":"https://i.postimg.cc/3Rd6NTPm/X.png","link":"/","description":"Welcome to this blog! Here will tell you everything about X-29.","socials":{"github":"https://github.com/X29w","twitter":"","stackoverflow":"https://stackoverflow.com/users/20511900/x29","wechat":"","qq":"","weibo":"https://weibo.com/u/7801588846","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"interview-javascript","uid":"cf0441f16ce9f9e8f078668d5a3bf9e5","slug":"interview-javascript","date":"2024-05-30T14:58:24.000Z","updated":"2024-06-04T06:51:30.080Z","comments":true,"path":"api/articles/interview-javascript.json","keywords":null,"cover":null,"text":"JavaScriptJavaScript有哪些数据类型，它们的区别？ 原始数据类型： Undefined：表示变量已被声明但未被赋值，只有一个值undefined。 Null：表示一个空对象指针，用于表示缺少值，只有一个值null。 Boolean：逻辑类型，只有两个值true和...","link":"","photos":[],"count_time":{"symbolsCount":"48k","symbolsTime":"44 mins."},"categories":[],"tags":[],"author":{"name":"X-29","slug":"blog-author","avatar":"https://i.postimg.cc/3Rd6NTPm/X.png","link":"/","description":"Welcome to this blog! Here will tell you everything about X-29.","socials":{"github":"https://github.com/X29w","twitter":"","stackoverflow":"https://stackoverflow.com/users/20511900/x29","wechat":"","qq":"","weibo":"https://weibo.com/u/7801588846","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"interview-html","uid":"3aa405af8114bdbedccc4d79b50ad9ac","slug":"interview-html","date":"2024-05-30T14:53:42.000Z","updated":"2024-05-30T14:54:12.434Z","comments":true,"path":"api/articles/interview-html.json","keywords":null,"cover":null,"text":"HTMLsrc和href的区别 用途不同 src（Source 的缩写）用于嵌入外部资源到当前文档中。这些资源是文档结构或功能的一部分，浏览器会暂停页面渲染来加载这些资源，并将其内容直接插入到文档中相应的位置。href（Hypertext Reference 的缩写）用于定义一个...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"X-29","slug":"blog-author","avatar":"https://i.postimg.cc/3Rd6NTPm/X.png","link":"/","description":"Welcome to this blog! Here will tell you everything about X-29.","socials":{"github":"https://github.com/X29w","twitter":"","stackoverflow":"https://stackoverflow.com/users/20511900/x29","wechat":"","qq":"","weibo":"https://weibo.com/u/7801588846","zhihu":"","csdn":"","juejin":"","customs":{}}}}}