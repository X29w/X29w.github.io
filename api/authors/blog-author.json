{"name":"X-29","slug":"blog-author","avatar":"https://i.postimg.cc/3Rd6NTPm/X.png","link":"/","description":"Welcome to this blog! Here will tell you everything about X-29.","socials":{"github":"https://github.com/X29w","twitter":"","stackoverflow":"https://stackoverflow.com/users/20511900/x29","wechat":"","qq":"","weibo":"https://weibo.com/u/7801588846","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"computer-network","uid":"69f67c9618e4f6aaa1fdf4000b651c72","slug":"computer-network","date":"2024-12-29T06:16:28.000Z","updated":"2024-12-29T07:08:36.451Z","comments":true,"path":"api/articles/computer-network.json","keywords":null,"cover":"/images/interview-computer-network/cover.png","text":"HTTP 协议GET 和 POST 的请求的区别GET 和 POST 是 HTTP 协议中最常见的两种请求方法，它们在用途、安全性、数据大小限制等方面有显著的区别。下面用表格的形式来展示它们的主要差异： 特性 GET POST 用途 用于请求服务器发送特定资源。 用于向服务器发送...","link":"","photos":[],"count_time":{"symbolsCount":"52k","symbolsTime":"47 mins."},"categories":[{"name":"interview","slug":"interview","count":5,"path":"api/categories/interview.json"}],"tags":[{"name":"computer-network","slug":"computer-network","count":1,"path":"api/tags/computer-network.json"}],"author":{"name":"X-29","slug":"blog-author","avatar":"https://i.postimg.cc/3Rd6NTPm/X.png","link":"/","description":"Welcome to this blog! Here will tell you everything about X-29.","socials":{"github":"https://github.com/X29w","twitter":"","stackoverflow":"https://stackoverflow.com/users/20511900/x29","wechat":"","qq":"","weibo":"https://weibo.com/u/7801588846","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"interview-react","uid":"315f9f443ae2dc302897ea2ae6c37f7e","slug":"interview-react","date":"2024-12-29T04:03:32.000Z","updated":"2024-12-29T06:12:06.463Z","comments":true,"path":"api/articles/interview-react.json","keywords":null,"cover":"/images/interview-react/cover.png","text":"组件基础React 事件机制 新的事件委托机制： &#x2F;&#x2F; React 18+ 的事件绑定示例 const App &#x3D; () &#x3D;&gt; &#123; &#x2F;&#x2F; 事件处理器 const handleClick &#x3D; (e...","link":"","photos":[],"count_time":{"symbolsCount":"169k","symbolsTime":"2:33"},"categories":[{"name":"interview","slug":"interview","count":5,"path":"api/categories/interview.json"}],"tags":[{"name":"react","slug":"react","count":1,"path":"api/tags/react.json"}],"author":{"name":"X-29","slug":"blog-author","avatar":"https://i.postimg.cc/3Rd6NTPm/X.png","link":"/","description":"Welcome to this blog! Here will tell you everything about X-29.","socials":{"github":"https://github.com/X29w","twitter":"","stackoverflow":"https://stackoverflow.com/users/20511900/x29","wechat":"","qq":"","weibo":"https://weibo.com/u/7801588846","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"interview-javascript","uid":"cf0441f16ce9f9e8f078668d5a3bf9e5","slug":"interview-javascript","date":"2024-12-28T06:44:24.000Z","updated":"2024-12-29T06:07:32.266Z","comments":true,"path":"api/articles/interview-javascript.json","keywords":null,"cover":"/images/interview-javascript/cover.png","text":"数据类型JavaScript 有哪些数据类型，它们的区别？在 JavaScript 中，数据类型主要分为两大类：基本数据类型（Primitive Types）和 引用数据类型（Reference Types）。以下是详细的分类和它们的区别： 1. 基本数据类型（Primitive...","link":"","photos":[],"count_time":{"symbolsCount":"150k","symbolsTime":"2:17"},"categories":[{"name":"interview","slug":"interview","count":5,"path":"api/categories/interview.json"}],"tags":[{"name":"javascript","slug":"javascript","count":1,"path":"api/tags/javascript.json"}],"author":{"name":"X-29","slug":"blog-author","avatar":"https://i.postimg.cc/3Rd6NTPm/X.png","link":"/","description":"Welcome to this blog! Here will tell you everything about X-29.","socials":{"github":"https://github.com/X29w","twitter":"","stackoverflow":"https://stackoverflow.com/users/20511900/x29","wechat":"","qq":"","weibo":"https://weibo.com/u/7801588846","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"interview-css","uid":"22d898182469a084004dd0b5135b46c1","slug":"interview-css","date":"2024-12-28T06:03:24.000Z","updated":"2024-12-28T06:42:34.880Z","comments":true,"path":"api/articles/interview-css.json","keywords":null,"cover":"/images/interview-css/cover.png","text":"一、CSS 基础CSS 选择器及其优先级CSS 选择器用于选择 HTML 元素并应用样式。选择器的种类繁多，每种选择器都有其特定的用途和优先级。以下是常见的 CSS 选择器及其优先级的详细介绍。 1. 常见的 CSS 选择器 通用选择器 (*)： 选择所有元素。 * &#123;...","link":"","photos":[],"count_time":{"symbolsCount":"105k","symbolsTime":"1:35"},"categories":[{"name":"interview","slug":"interview","count":5,"path":"api/categories/interview.json"}],"tags":[{"name":"css","slug":"css","count":1,"path":"api/tags/css.json"}],"author":{"name":"X-29","slug":"blog-author","avatar":"https://i.postimg.cc/3Rd6NTPm/X.png","link":"/","description":"Welcome to this blog! Here will tell you everything about X-29.","socials":{"github":"https://github.com/X29w","twitter":"","stackoverflow":"https://stackoverflow.com/users/20511900/x29","wechat":"","qq":"","weibo":"https://weibo.com/u/7801588846","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"interview-html","uid":"3aa405af8114bdbedccc4d79b50ad9ac","slug":"interview-html","date":"2024-12-22T10:43:24.000Z","updated":"2024-12-28T06:37:51.170Z","comments":true,"path":"api/articles/interview-html.json","keywords":null,"cover":"/images/interview-html/cover.png","text":"src 和 href 的区别在 HTML 中，src 和 href 是两个常用的属性，它们的主要区别在于它们的用途和适用的标签。以下是详细的解释： 1. src 属性 全称：source（源） 用途：用于指定外部资源的路径，通常用于嵌入媒体文件，如图像、音频、视频等。 适用标签：...","link":"","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"32 mins."},"categories":[{"name":"interview","slug":"interview","count":5,"path":"api/categories/interview.json"}],"tags":[{"name":"html","slug":"html","count":1,"path":"api/tags/html.json"}],"author":{"name":"X-29","slug":"blog-author","avatar":"https://i.postimg.cc/3Rd6NTPm/X.png","link":"/","description":"Welcome to this blog! Here will tell you everything about X-29.","socials":{"github":"https://github.com/X29w","twitter":"","stackoverflow":"https://stackoverflow.com/users/20511900/x29","wechat":"","qq":"","weibo":"https://weibo.com/u/7801588846","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"rollup","uid":"6d1a44d72f500b2ae165cfd01771a531","slug":"rollup","date":"2024-12-22T08:39:14.000Z","updated":"2024-12-22T10:16:45.524Z","comments":true,"path":"api/articles/rollup.json","keywords":null,"cover":"/images/rollup/cover.png","text":"rollup前端工程化历程 除屑优化(tree shaking)除了可以使用 ES 模块之外，Rollup 还可以静态分析你导入的代码，并将排除任何实际上没有使用的内容，从上面的引入和最后的打包结果就可以看到，没有使用到的内容直接被删除了。 注意，除屑优化的核心思想是在编译阶段通...","link":"","photos":[],"count_time":{"symbolsCount":"53k","symbolsTime":"48 mins."},"categories":[{"name":"Academic","slug":"Academic","count":2,"path":"api/categories/Academic.json"}],"tags":[{"name":"rollup","slug":"rollup","count":1,"path":"api/tags/rollup.json"}],"author":{"name":"X-29","slug":"blog-author","avatar":"https://i.postimg.cc/3Rd6NTPm/X.png","link":"/","description":"Welcome to this blog! Here will tell you everything about X-29.","socials":{"github":"https://github.com/X29w","twitter":"","stackoverflow":"https://stackoverflow.com/users/20511900/x29","wechat":"","qq":"","weibo":"https://weibo.com/u/7801588846","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"React-Principle","uid":"6f35d21607cc4ac40e0305fd85e2df31","slug":"React-Principle","date":"2024-11-23T16:50:47.000Z","updated":"2024-11-30T04:09:53.429Z","comments":true,"path":"api/articles/React-Principle.json","keywords":null,"cover":null,"text":"React-Principle此文章旨在于剖析 React 的一些基本原理，帮助读者更好地理解 React 的工作原理。并写出属于自己的 React 代码。 前置任务搭建目录以及配置一些工具First of all！ ├── packages| ├── react| | ├── ...","link":"","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"24 mins."},"categories":[{"name":"React","slug":"React","count":1,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":2,"path":"api/tags/React.json"}],"author":{"name":"X-29","slug":"blog-author","avatar":"https://i.postimg.cc/3Rd6NTPm/X.png","link":"/","description":"Welcome to this blog! Here will tell you everything about X-29.","socials":{"github":"https://github.com/X29w","twitter":"","stackoverflow":"https://stackoverflow.com/users/20511900/x29","wechat":"","qq":"","weibo":"https://weibo.com/u/7801588846","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"前端自动化部署","uid":"78c733f14091289904e8c5ab0e4b1c53","slug":"automated-deployment","date":"2024-10-20T04:18:31.000Z","updated":"2024-11-23T16:49:25.153Z","comments":true,"path":"api/articles/automated-deployment.json","keywords":null,"cover":[],"text":"所谓自动化部署就是当代码触发提交的时候自动部署到服务器上 前置准备工作 服务器：需要有一台可以部署代码的服务器，比如阿里云、腾讯云、GitHub Pages 等 代码仓库：需要有一个代码仓库，比如 GitHub、GitLab 等 会 linux 懂点 Ngnix 懂点 Git 买...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"Academic","slug":"Academic","count":2,"path":"api/categories/Academic.json"}],"tags":[{"name":"docker","slug":"docker","count":1,"path":"api/tags/docker.json"},{"name":"nginx","slug":"nginx","count":1,"path":"api/tags/nginx.json"},{"name":"jenkins","slug":"jenkins","count":1,"path":"api/tags/jenkins.json"},{"name":"linux","slug":"linux","count":1,"path":"api/tags/linux.json"}],"author":{"name":"X-29","slug":"blog-author","avatar":"https://i.postimg.cc/3Rd6NTPm/X.png","link":"/","description":"Welcome to this blog! Here will tell you everything about X-29.","socials":{"github":"https://github.com/X29w","twitter":"","stackoverflow":"https://stackoverflow.com/users/20511900/x29","wechat":"","qq":"","weibo":"https://weibo.com/u/7801588846","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"web多环境配置","uid":"9668cd611991e16937a9fdd60d6dd807","slug":"multiple-environments","date":"2024-10-20T02:15:18.000Z","updated":"2024-11-23T16:49:46.969Z","comments":true,"path":"api/articles/multiple-environments.json","keywords":null,"cover":[],"text":"web 端多环境配置多环境无非就是请求的接口不一样所以本文将介绍如何在 web 端配置不同的请求接口的环境 1. 准备工作npm init vite@latest 完成之后长这样 2.配置一些变量2.1 在根目录下新增 config 文件夹config ├── plugins.t...","link":"","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"Skill","slug":"Skill","count":1,"path":"api/categories/Skill.json"}],"tags":[{"name":"React","slug":"React","count":2,"path":"api/tags/React.json"},{"name":"web","slug":"web","count":1,"path":"api/tags/web.json"},{"name":"Vite","slug":"Vite","count":1,"path":"api/tags/Vite.json"}],"author":{"name":"X-29","slug":"blog-author","avatar":"https://i.postimg.cc/3Rd6NTPm/X.png","link":"/","description":"Welcome to this blog! Here will tell you everything about X-29.","socials":{"github":"https://github.com/X29w","twitter":"","stackoverflow":"https://stackoverflow.com/users/20511900/x29","wechat":"","qq":"","weibo":"https://weibo.com/u/7801588846","zhihu":"","csdn":"","juejin":"","customs":{}}}}],"categories":4,"tags":14,"word_count":"606k","post_count":9}