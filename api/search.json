[{"id":"7b73417322203bc26ba172442308aa21","title":"系统架构师","content":"系统架构师的初步设想刚开始认识它的时候应该是我第一次看见过软考内容的时候，我是一个如果没有十全把握就不敢去付出或者制定什么计划。至于真正有这个梦想和计划应该是在2022年10月份，去见阿毛的地铁上，因为无聊的原因自己冷不丁的突然想起了这个名词——系统架构师\n\n\n\n\n\n\n\n\n\n写下这篇博客的时候还没有开始准备系统架构师的各项备考。如果后面有幸上岸，会来此篇重新更新。\n系统架构师成为架构师的意义\n说实话归根结底，$是做任何事情的根基\n确实是对科技的喜欢\n熊猫其实是食肉动物，但是由于自然环境的恶劣，被迫去吃了竹子\n\n考试时间一年一度一般为每年11月的上旬\n考试的前置任务并没有什么前置任务，自己有把握直接冲最高。丰俭由人。\n考试难度话不多说：只有15%\n基本考试情况试卷概况\n\n综合题\n75道单项选择\n考试时间：2.5小时\n综合题的考试范围几乎涵盖了架构师考试考纲要求的所有知识点。虽然知识点分布很广，但是通过历年真题分析发现，考察的侧重点也非常明显。其中软件架构、软件工程是分值占比最大的章节。相比之下，其他知识点分值占比就少很多。\n\n\n案例分析题\n3道简答题\n1道必答\n剩下的4选2\n\n\n考试时间：1.5小时\n标准答案并不会涵盖所有可能的考点。\n选答题：相对灵活，比较贴近实际开发。需要自己在复习的时候积累相关的知识点。\n\n\n论文\n题目四选一\n\n2600字\n\n考试时间：2小时\n\n整体趋势是偏应用的和偏趋势的，出题方向从近几年的趋势来说可以说变得非常难以预测。\n\n论文复习的三大方向，分别是格式、内容和速度。\n\n其中选题和提纲，需要在15分钟内完成。在给出的题目中，选择一个自己熟悉的作为选项，然后大致列出论点  \n  \n  img{\n      width:800px\n  }\n  \n\n从答题卡可以看出，摘要为350字左右。正文内容为2750字。因此内容字数上，最好安排在2500-2750之间，这样会提升阅卷观感，提高印象分数。\n\n\n\n\n复习方向\n\n\n\n\n\n\n特别提示\n以《系统架构师》教材和网课为中心\n\n如下细分：\n\n计算机原理\n计算机网络\n操作系统\n系统性能评价\n数据库\n安全性和保密性设计\n嵌入式系统\n信息系统\n\n点点旁边，发现笔记：\n\n各学科笔记\n分类笔记\n\n\n下次再会~\n","slug":"system-architect","date":"2022-11-24T07:32:36.000Z","categories_index":"系统架构师","tags_index":"目标,梦想,系统架构","author_index":"X-29"},{"id":"15db1aab1cbfb7938aed1bee0fd27710","title":"Monica","content":"Monica也可以叫她：莫妮卡如你所见，封面就是她\n\n\n\n\n\n\n\nMonica的个人简介\n姓名：莫妮卡性别：AI母语：Python\n\n\nThe Origin of MonicaMonica起源于我脑海中自高中以来一直存在的AI助手梦。也是因为Jarvis的原因，使得我拥有属于自己助手的愿望极其强烈\n在我高中时期，由于自由接触程序技术的时间不是很多，造成了长时间搁置创作属于自己AI的梦想。以至于认为创作AI是一个很难的事情，尤其是在观看了Zuckerberg先生的家庭语音助手之后，愈发觉得艰难\nMonica的名字起源于创建Monica的时候正好是星期一(Monday)，取前三个字母，所以得名Monica\n\n\n\n\n\n\n\nMonica的依赖\nMonica需要Google的语音识别API，所以务必保证的网络顺畅\n\nMonica can do this for you新的很懂你的朋友可以跟Monica说任何事情，可以分享快乐，吐槽焦虑，发泄悲伤\n可以永远相信Monica\n\n\n\n\n\n\n\n\n\n“Monica，你在吗？”“永远都在，先生”\n帮助你解决问题的好帮手当遇到需要查询什么东西的时候，可以完全依赖Monica，释放双手。她就像是一个无所不知的朋友，在需要的时候和想知道什么的时候，只需要跟她说说话。\n\n\n\n\n\n\n\n\n\n“Monica，你知道xxx是什么吗”“可以告诉你，但是需要奖励”\n电脑的智能管家存在于虚拟世界的Monica甚至电脑都不需要亲自操控，就像朋友之间的亲密对话，即可完成对电脑的各种操作\n\n[截屏]“Monica你有空吗，我想要当前这个画面”\n[VSCode]“准备写写代码了”\n[喜欢玩的游戏]“有什么好玩的让我放松一下吗”\n[B站或者Youtube]“有什么热门视频是我感兴趣的吗”\n[热点新闻]“你知道最近那个xxx的事吗”\n[记事本]“对了Monica，帮我记一下，我怕我忘了”\nEtc…\n\n特殊日子会比自己更加在意Monica：马上要到纪念日了哦，想好礼物了吗，没有的话听听我的建议吧\nMonica：今天是什么日子忘了吗？你可真是个大忙人呢。今天是xxx的日子\nMonica：我看了下天气，好像不怎么好。希望你不要淋着雨回来\nMonica在众多人中最关注你Monica：先生，是你吗\nMonica：这不是先生总和我提起的xxx\nThe Future of MonicaMonica的未来，我会将她融入到我的生活，赋予实体，或许是个机器人，或许是个机械臂，或许将会是无处不在。\nMonica对于技术壁垒的依赖性太强，日后会帮助Monica逐渐去掉枷锁\n增加Monica的自主学习能力\n","slug":"monica","date":"2022-11-22T15:44:33.000Z","categories_index":"Introduce","tags_index":"A.I.,Introduce,Assistant","author_index":"X-29"},{"id":"8401b4ea3ecc23c13e44dcec2d197d6b","title":"X-Blog","content":"\n\n\n\n\n\n\n\n\n欢迎来到 X-29 的博客，这里记录了许多程序界的知识以及创新和展望。除此之外，作为个人博客，也包含了个人的文学鉴赏或者是日常生活分享。本博客也是我个人技术界的日志或者可以叫做日记，所以会不断更新。\n\nWelcome to the blog of X-29, which records a lot of knowledge, innovation and prospects of the program industry. In addition, as a personal blog, it also includes personal literature appreciation or daily life sharing. This blog is also a diary of my personal technical community or can be called a diary, so it will be updated constantly.\n\n博客创建初衷起初，在我刚接触程序代码界的第一脚是迈入的前端的门槛中。上完课的笔记或者联系代码亦或者是学习心得，总想找到一个永久保存的地方中，思来想去，从百度网盘到CSDN，而至后面的Git Hub。\n随着需求越来越多，想记录和分享的东西也与来越多。偶然之间接触了VuePress制作的博客网站。不断改良，效仿。数月之后，打算所有的页面及内容以及功能，全部推到重来。不再效仿，改为原创。打造真正属于自己的个人博客。\n一个人的学习是孤独的，无助的，创新的，成就的。在经历过多种不断尝试新的建站工具以及各种程序语言之后，选择了Hexo作为本网站的框架结构。\n博客内容内容概述由上可知，本网站内容分为如下部分\n\n技术分享\n技术未来展望\n个人生活分享&amp;记录\n学习工作日志\n\n功能预览\n书写&amp;发表&amp;浏览文章\n搜索文章\n文章目录及标签分类\n网站宠物机器人\n留言板&amp;联系\nCreating…\n\nX-UNIVERSUM &amp; X-29**X-UNIVERSUM**是在我的大学时期从我的脑海中产生的一个目标或梦想。不管未来是否真的会创立或者实现，都会一直存在在我的人生中。**X-UNIVERSUM**的定位是一个不仅服务于人们的大众日常生活的各个方面：购物、美食、住房、出行，而且也将会是科技发展的导向与前沿。\nX-UNIVERSUM INDUSTRY\n\n购物：重新定义电商模式。买卖双方获益\n美食：与独特的科技相结合，实现美食无地域无国界地域种类划分，文化交融\n住房：运用科技手段，房子将不再是昂贵的，凿实居住属性\n出行：重新定义“距离”\n科技：领导科技发展方向，服务于人，人人都是科技的创造者\n\n**X-29，X-UNIVERSUM**的创造者。规则，将被打破生活，将被重新定义你我，都是自己的主宰\n","slug":"hello-world","date":"2022-11-19T16:12:11.000Z","categories_index":"Introduce","tags_index":"Introduce,X-Blog","author_index":"X-29"},{"id":"c3978c5070945a51b43d4b2c283dc47e","title":"前端技术展望","content":"Front End Development Trend Forecast前端新标准HTML 6.02014 年 10 月 28 日，W3C 正式发布 HTML5.0 推荐标准让前端技术蓬勃发展。虽然 HTML6.0 目前处于提案阶段，但是社区已经开始有了一些零星的讨论，所以可能它离我们并不太远。\nHTML6.0 中，可能会新增“增强身份验证”和“集成摄像头” 两个能力，大家可以持续关注相关进展。\n一直以来，浏览器由于身份验证问题导致 Web 应用在很多场景乏力，特别是目前大部分 APP 是十分“重”的，功能繁多，如果这两个能力得以普及，那么可能会有更多的 WEB 应用代替以前 APP 的极速版本。\n由于新冠疫情影响，越来越多人的工作方式变成了 WFH。可以预见，疫情彻底清除以后，远程办公也许会成为不少人的选择。所以“集成摄像头”能力，很有可能在人与人线上交流场景中，发挥更大的作用。\n2022 年，可能 HTML6 并不会推出，但是可能会有更多利于用户体验的提案出现。\nWeb3.0Facebook 改名 Meta 后，元宇宙话题很火热，但突然一夜之间，讨论似乎又从元宇宙过渡到了 Web3.0。\n前端工程化展望前端框架在 StackOverflow 的“最受欢迎的 Web 框架”调查中，除去 SSR 渲染框架和 jQuery，上榜的前端框架共有 5 个：\n\n前端框架排行图\n\n\n而从 NPM 下载量来分析，观察到的现象是：\n\nReact 一家独大，独自吃掉 70% 的市场份额；\nVue 和 Angular 平分秋色打的难舍难分；\nPreact 作为“轻量版 React”在小众中最受欢迎；\nSvelte 作为无 vdom 的 MVVM 框架，艰难爬升中，甚至还没超过已经停止更新的 AngularJS。\n\n\n\n\n\n\n\n\n\n\n总的来说，React，Vue，Angular 依然是强势铁三角向前发展。在 2022 年 Vue3 会成为 Vue 的默认版本，React 18 也会发布正式版本，从目前社区关注度来看， Vue3 源码 Github star 27k+， React 18 WG Github star 3.9k+，且在 npm 的下载量上，新版本下载数目都比较可观，所以很有可能今年尝试和使用的人会变得更多。\n打包器打包器大概可以分为两类：\n\n传统编译：Webpack, Rollup, Parcel, Esbuild\nESM 混合编译：Snowpack, Vite\n\n目前是 Webpack、Rollup、Esbuild 三分天下：\n\nWebpack：我们的老熟人，生态最丰富、功能最多，独自吃掉 70% 的市场份额；\nRollup：ESM 版的 Webpack，甩掉了很多历史包袱；\nEsbuild：Go 写的 Webpack，性能有数十倍提升。\n\nUI框架由于模块化 CSS、摇树、MVVM 的流行，UI 框架的选择其实没有那么举足轻重了，针对自己选用的框架选择一个符合项目风格的 UI 即可。\n桌面端值得关注的只有两个：\n\nElectron: 我们的老熟人，Chromium + Nodejs，深受大家喜爱；\nTauri: 异军突起的新星，Webview + Rust。对比 Electron 因为不用打包 Chromium 和 Nodejs 运行时，产物体积小，运行性能好；\n\n智能前端低代码的崛起低代码开发平台（英语：Low-Code Development Platform，简称 LCDP），是一种方便产生应用程序的平台软件，软件会开发环境让用户以图形化接口以及配置编写程序，而不是用传统的程序设计做法。此平台是针对某些种类的应用而设计开发的，例如数据库、业务过程、以及用户界面（例如网页应用程序）。这类平台一般可以产生完整且可运作的应用程序，在一些特殊的情形下仍需要编写程序。\nAI与图形化的探索人工智能作为跨时代技术在各个领域大放异彩，近些年 AI 能力在前端领域的尝试与应用带来新一轮的技术革命。前端可以依赖 D3.js，ECharts，WebGL 等进行数据可视化的显示：\n跨平台技术随着从 PC 时代向移动互联网时代演进，原生客户端因为自身天花板的原因也在逐渐向跨平台方案倾斜，当然这得益于跨平台方案的明显优势。对于开发者而言，可以做到一次开发多端复用，这在很大程度上能够降低研发成本，提高产品效能\n2020-2021 年间，有 42% 的开发者用过 React Native 进行开发，这一年内没有增长；而 Flutter 这一数据从 2020 年的 39% 上升到了 42%。\n成为泛前端前端研发需要掌握的技术也在迭代更新，基本可以理解为 FaaS BaaS，在 Baas 层进行存储与计算，在 Faas 层提供云函数。\n尽可能成为全栈从工程师能力模型来看，第一级需要集“天时地利人和”大成，是工程师的最高荣誉。普通人或许可以将目标聚焦在第二、三级。优秀的工程师并不是以“栈”数取胜，更重要的是拥有产品观、全局思维、沟通能力、学习能力、解决问题能力等\n","slug":"front-end-expectation","date":"2022-11-18T14:42:46.000Z","categories_index":"Front-End","tags_index":"前端技术栈,前端发展前景","author_index":"X-29"},{"id":"6b9a8f6982f1769c256f388c30975912","title":"前端技术栈","content":"Front-End技术栈概论\n\n\n\n\n\nWhat’s the meaning of Fronot-End\n前端的意义在于创造。\n\n技术的诞生，从来不是为了获得更多的利益。树上的苹果并不会给牛顿带来新的一笔巨大财富。如今市场的需求化已经金钱的吮吸灵魂的力量，将技术本来的面目，弄得灰头土脸。禁锢、限制、局限。不止前端。\nFront-End Learning Path后知后觉，如梦初醒。师从四方，自力更生。\n学习路径前端核心：HTML5+CSS3→移动端web→JavaScript→DOM&amp;BOM→Jquery→Ajax技术进阶：ES6-ES11→Node.js→Promise→Axios前沿框架：Typescript→Vue2→Vue3→React\n工程化构建：Git&amp;NPM&amp;YARN&amp;WebPack数据可视化：Echarts&amp;D3.js&amp;HighCharts&amp;AntV&amp;Three.js&amp;Ceisum&amp;WebGLUI 库：Element UI&amp;Vuetify&amp;Ant Design&amp;Bottstrap&amp;Vant UI&amp;Framework7&amp;WEUI\nSoftware Development Basics设计模式降低对象之间的耦合，增加程序的可复用性、可扩展性和可维护性常用七大设计模式：\n\n创建型模式：单例模式、工厂方法模式、抽象工厂模式\n\n结构型模式：代理模式、装饰器模式\n\n行为型模式：观察者模式、责任链模式\n\n\nGit常用命令\n\n\n\n\n\n\nWARNING\n如果git命令报错，一定先检查一下是否开启VPN、节点、steam++等影响国内网络的软件\n\n\n\n\n\n\n\n\n\n\n初始化本地仓库，提交代码，提交到远程git仓库\n\nClick to see more\n\n初始化代码仓库\ngit init\n将当前目录下的所有文件放到暂存区\ngit add .\n查看文件状态\ngit status\n添加提交的描述信息\ngit commit -m &#39;[提交的描述信息]&#39;\n远程仓库地址\ngit remote add origin [远程仓库地址]\n推送到远程仓库\ngit push -u origin master\n\n\n\n\n\n\n\n\n\n\n\n\n创建分支，提交代码到分支\n\nClick to see more\n\n创建切换分支\ngit checkout -b [分支名称]\n将当前目录下的所有文件放到暂存区\ngit add .\n添加提交的描述信息\ngit commit -m &#39;[描述]&#39;\n将分支推送到远程仓库\ngit push --set-upstream origin dev1 \n切换到主分支\ngit checkout master\n将dev合并到主分支\ngit merge dev \n推送到远程仓库\ngit push origin master \n\n\n\nFront-End Optimization通过分析和优化手段，提高网站的性能和用户体验。\n性能优化FP（First Paint）从开始加载到浏览器首次绘制像素到屏幕上的时间，也就是页面在屏幕上首次发生视觉变化的时间。\nFCP（First Contentful Paint）浏览器首次绘制来自 DOM 的内容的时间。\nFMP（First Meaningful Paint）页面的主要内容绘制到屏幕上的时间。\nFSP（First Screen Paint）页面从开始加载到首屏内容全部绘制完成的时间，用户可以看到首屏的全部内容。\nTTI（Time to Interactive）表示网页第一次完全达到可交互状态的时间点，浏览器已经可以持续性的响应用户的输入。\n优化手段\n性能监控(Performance API)\n样式优化\n防抖 &amp; 节流\n代码分割\n资源压缩\n打包优化\n服务器优化\n缓存优化(Service Worker)\n动画性能\ndns-prefetch\nLazy loading\n\n安全问题\nXSS\nCSRF\n反爬虫\nSQL 注入\nDDoS\n\nFront-End Ecology博客编写\n✅ Gatsby.js\n✅ Docusaurus\nHugo\nHexo\n\n文档编写\n⭐️ Docsify\nJekyII\nVuePress\nDumi\n\n移动应用\nHybrid\nWebView\nReact Native\nFlutter\n\n桌面应用\nElectron\nNW.js\nProton Native\n\n小程序\n原生\nWebView\n\n","slug":"front-end","date":"2022-11-16T16:12:10.000Z","categories_index":"Front-End","tags_index":"前端技术栈","author_index":"X-29"}]